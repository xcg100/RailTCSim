/*
 * File:           GamestoreHandler.java
 * Date:           27. September 2007  17:31
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           26. September 2007  10:20
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           26. September 2007  09:15
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           25. September 2007  13:17
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           25. September 2007  13:05
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           19. September 2007  11:16
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           28. Juli 2007  20:34
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           18. Juli 2007  14:20
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           18. Juli 2007  08:11
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           2. Juli 2007  08:15
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           21. Mai 2007  14:34
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           17. Mai 2007  00:51
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
/*
 * File:           GamestoreHandler.java
 * Date:           16. Mai 2007  19:15
 *
 * @author  js
 * @version generated by NetBeans XML module
 */
package org.railsim.xml;

import org.xml.sax.*;

public interface GamestoreHandler {

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param meta
	 * @throws SAXException
	 */
	public void handle_connect(final Attributes meta) throws SAXException;

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param meta
	 * @throws SAXException
	 */
	public void handle_data(final Attributes meta) throws SAXException;

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param meta
	 * @throws SAXException
	 */
	public void handle_pathelement(final Attributes meta) throws SAXException;

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param meta
	 * @throws SAXException
	 */
	public void handle_epart(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_tpart(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_tpart() throws SAXException;

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param data value or null
	 */
	public void handle_time(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_trackobject(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_trackobject() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_pathrequest(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_pathrequest() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_path(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_path() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_command(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_command() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_train(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_train() throws SAXException;

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param data value or null
	 */
	public void handle_frequence(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_trains(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_trains() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_savegame(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_savegame() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_emit(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_emit() throws SAXException;

	/**
	 *
	 * A data element event handling method.
	 *
	 * @param data value or null
	 * @param meta attributes
	 */
	public void handle_tdata(final java.lang.String data, final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_track(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_track() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_tracks(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_tracks() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_pathroute(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_pathroute() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_signaldata(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_signaldata() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_pathqueue(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_pathqueue() throws SAXException;

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param data value or null
	 */
	public void handle_mutex(final Attributes meta) throws SAXException;

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param data value or null
	 */
	public void handle_point(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_startqueue(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_startqueue() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_routes(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_routes() throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_route(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_route() throws SAXException;

	/**
	 *
	 * An empty element event handling method.
	 *
	 * @param data value or null
	 */
	public void handle_requestedpath(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element start event handling method.
	 *
	 * @param meta attributes
	 */
	public void start_trainemitter(final Attributes meta) throws SAXException;

	/**
	 *
	 * A container element end event handling method.
	 */
	public void end_trainemitter() throws SAXException;
}
