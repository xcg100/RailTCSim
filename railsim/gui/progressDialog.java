/*
 * $Revision: 20 $
 * Copyright 2008 js-home.org
 * $Name: not supported by cvs2svn $
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.railsim.gui;

/**
 *
 * @author js
 */
public class progressDialog extends javax.swing.JDialog {

	long size = 0;
	long value = 0;
	Runnable rvalue = new Runnable() {
		@Override
		public void run() {
			progressBar.setValue((int) (value / 10));
		}
	};
	Runnable rmax = new Runnable() {
		@Override
		public void run() {
			if (size > 0) {
				progressBar.setMaximum((int) (size / 10));
				progressBar.setIndeterminate(false);
			} else {
				progressBar.setIndeterminate(true);
			}
		}
	};
	Runnable rclose = new Runnable() {
		@Override
		public void run() {
			setVisible(false);
		}
	};

	/**
	 * Creates new form progressDialog
	 */
	public progressDialog(java.awt.Frame parent, String _text, long _size) {
		super(parent, true);
		size = _size;
		initComponents();
		labelField.setText(_text);
		setTitle(_text);
		pack();
		setLocationRelativeTo(parent);
		setMax(_size);
	}

	public progressDialog(java.awt.Frame parent, String _text) {
		this(parent, _text, -1);
	}

	public progressDialog(java.awt.Frame parent, long _size) {
		this(parent, "Working...", _size);
	}

	public progressDialog(java.awt.Frame parent) {
		this(parent, -1);
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        progressBar = new javax.swing.JProgressBar();
        labelField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        progressBar.setFocusable(false);
        progressBar.setIndeterminate(true);
        getContentPane().add(progressBar, java.awt.BorderLayout.SOUTH);

        labelField.setText("Loading...");
        labelField.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelField.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        getContentPane().add(labelField, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelField;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables

	public void setValue(long v) {
		value = v;
		javax.swing.SwingUtilities.invokeLater(rvalue);
	}

	public void setMax(long _size) {
		size = _size;
		javax.swing.SwingUtilities.invokeLater(rmax);
	}

	public void open() {
		setVisible(true);
	}
	private progressDialogRunnable pdr_r;

	public void open(progressDialogRunnable r) {
		pdr_r = r;
		Thread t = new Thread(new Runnable() {
			@Override
			public void run() {
				try {
					runPDR();
				} finally {
					close();
				}
			}
		});
		t.start();
		setVisible(true);
	}

	void runPDR() {
		pdr_r.run(this);
	}

	public void close() {
		javax.swing.SwingUtilities.invokeLater(rclose);
	}

	public void close(String text) {
		labelField.setText(text);
		close();
	}

	public void setText(String _text) {
		labelField.setText(_text);
		setTitle(_text);
	}
}
