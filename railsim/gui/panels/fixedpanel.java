/*
 * $Revision: 20 $
 * Copyright 2008 js-home.org
 * $Name: not supported by cvs2svn $
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.railsim.gui.panels;

import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

import org.railsim.*;
import org.railsim.event.*;
import org.railsim.gui.miniMap;

/**
 *
 * @author js
 */
public class fixedpanel extends javax.swing.JPanel {

	/**
	 * Creates new form mainpanel_file
	 */
	public fixedpanel() {
		initComponents();
		dataCollector.collector.filenameListeners.addListener(new AbstractListener() {
			@Override
			public void action(AbstractEvent e) {
				save_Button.setEnabled(dataCollector.collector.getFilename().length() > 0);
			}
		});
		KeyStroke ks = KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK);
		save_Button.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(ks,
				"doSave");
		save_Button.getActionMap().put("doSave",
				new AbstractAction() {
					@Override
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						save_ButtonActionPerformed(evt);
					}
				});
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jSeparator1 = new javax.swing.JSeparator();
        zoomSlider = new javax.swing.JSlider();
        zoomLabel = new javax.swing.JLabel();
        map_Button = new javax.swing.JButton();
        save_Button = new javax.swing.JButton();
        exit_Button = new javax.swing.JButton();

        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 1, 0));

        setMaximumSize(new java.awt.Dimension(32767, 25));
        setMinimumSize(new java.awt.Dimension(189, 20));
        setPreferredSize(new java.awt.Dimension(229, 20));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setMaximumSize(new java.awt.Dimension(11, 32767));
        jSeparator1.setMinimumSize(new java.awt.Dimension(6, 10));
        jSeparator1.setPreferredSize(new java.awt.Dimension(6, 20));
        add(jSeparator1);

        zoomSlider.setMaximum(25);
        zoomSlider.setMinimum(4);
        zoomSlider.setToolTipText("Zoom");
        zoomSlider.setValue(10);
        zoomSlider.setMaximumSize(new java.awt.Dimension(100, 23));
        zoomSlider.setMinimumSize(new java.awt.Dimension(36, 23));
        zoomSlider.setPreferredSize(new java.awt.Dimension(60, 23));
        zoomSlider.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                zoomSliderStateChanged(evt);
            }
        });

        add(zoomSlider);

        zoomLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        zoomLabel.setText("1.0");
        zoomLabel.setFocusable(false);
        zoomLabel.setMaximumSize(new java.awt.Dimension(23, 23));
        zoomLabel.setMinimumSize(new java.awt.Dimension(23, 23));
        zoomLabel.setPreferredSize(new java.awt.Dimension(23, 23));
        add(zoomLabel);

        map_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/railsim/gui/resources/map_magnify.png")));
        map_Button.setToolTipText("\u00dcbersichtskarte");
        map_Button.setActionCommand("map");
        map_Button.setFocusPainted(false);
        map_Button.setFocusable(false);
        map_Button.setMargin(new java.awt.Insets(0, 3, 0, 3));
        map_Button.setMaximumSize(new java.awt.Dimension(23, 23));
        map_Button.setMinimumSize(new java.awt.Dimension(23, 23));
        map_Button.setPreferredSize(new java.awt.Dimension(23, 23));
        map_Button.setRequestFocusEnabled(false);
        map_Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                map_ButtonActionPerformed(evt);
            }
        });

        add(map_Button);

        save_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/railsim/gui/resources/save.png")));
        save_Button.setToolTipText("Save   Ctrl+S");
        save_Button.setActionCommand("Save");
        save_Button.setEnabled(false);
        save_Button.setFocusPainted(false);
        save_Button.setFocusable(false);
        save_Button.setMargin(new java.awt.Insets(0, 3, 0, 3));
        save_Button.setMaximumSize(new java.awt.Dimension(23, 23));
        save_Button.setMinimumSize(new java.awt.Dimension(23, 23));
        save_Button.setPreferredSize(new java.awt.Dimension(23, 23));
        save_Button.setRequestFocusEnabled(false);
        save_Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                save_ButtonActionPerformed(evt);
            }
        });

        add(save_Button);

        exit_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/railsim/gui/resources/exit.png")));
        exit_Button.setToolTipText("Exit");
        exit_Button.setActionCommand("Exit");
        exit_Button.setFocusPainted(false);
        exit_Button.setFocusable(false);
        exit_Button.setMargin(new java.awt.Insets(0, 3, 0, 3));
        exit_Button.setMaximumSize(new java.awt.Dimension(23, 23));
        exit_Button.setMinimumSize(new java.awt.Dimension(23, 23));
        exit_Button.setPreferredSize(new java.awt.Dimension(23, 23));
        exit_Button.setRequestFocusEnabled(false);
        exit_Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exit_ButtonActionPerformed(evt);
            }
        });

        add(exit_Button);

    }// </editor-fold>//GEN-END:initComponents

    private void map_ButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_map_ButtonActionPerformed
    {//GEN-HEADEREND:event_map_ButtonActionPerformed
		miniMap.openMap(this);
    }//GEN-LAST:event_map_ButtonActionPerformed

    private void zoomSliderStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_zoomSliderStateChanged
    {//GEN-HEADEREND:event_zoomSliderStateChanged
		int v = zoomSlider.getValue();
		zoomLabel.setText("" + v / 10.0);
		if (!zoomSlider.getValueIsAdjusting()) {
			dataCollector.collector.thepainter.setScale(v / 10.0);
		} else {
			dataCollector.collector.thepainter.scalePreview(v / 10.0);
		}
    }//GEN-LAST:event_zoomSliderStateChanged

    private void save_ButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_save_ButtonActionPerformed
    {//GEN-HEADEREND:event_save_ButtonActionPerformed
		dataCollector.collector.save();
    }//GEN-LAST:event_save_ButtonActionPerformed

    private void exit_ButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exit_ButtonActionPerformed
    {//GEN-HEADEREND:event_exit_ButtonActionPerformed
		dataCollector.collector.quitProgram();
    }//GEN-LAST:event_exit_ButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit_Button;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton map_Button;
    private javax.swing.JButton save_Button;
    private javax.swing.JLabel zoomLabel;
    private javax.swing.JSlider zoomSlider;
    // End of variables declaration//GEN-END:variables
}
