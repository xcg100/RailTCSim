/*
 * $Revision: 20 $
 * Copyright 2008 js-home.org
 * $Name: not supported by cvs2svn $
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.railsim.gui.panels;

import javax.swing.*;

import org.railsim.*;
import org.railsim.editor.*;
import org.railsim.event.*;
import org.railsim.gui.renderer.genericPaintInterfaceComboBoxRenderer;
import org.railsim.service.trackObjects.*;

/**
 *
 * @author js
 */
public class mainpanel_edittrackobjects extends javax.swing.JPanel {

	boolean CBeventDisable = false;
	trackObject workingTO = null;

	/**
	 * Creates new form mainpanel_file
	 */
	public mainpanel_edittrackobjects() {
		initComponents();
		dataCollector.collector.editorEventListeners.addListener(new AbstractListener() {
			@Override
			public void action(AbstractEvent e) {
				editorEvent((EditorEvent) e);
			}
		});
		CBeventDisable = true;
		for (String s : dataCollector.collector.tol.values()) {
			trackObject to = dataCollector.collector.tol.load(s);
			totypeCB.addItem(to);
		}
		CBeventDisable = false;
		totypeCB.setSelectedIndex(-1);
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        totypeCB = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        add_ToggleButton = new javax.swing.JToggleButton();
        del_Button = new javax.swing.JButton();
        rotate_Button = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        totypeCB.setActionCommand("trackobjectselect");
        totypeCB.setMaximumSize(new java.awt.Dimension(32767, 25));
        totypeCB.setMinimumSize(new java.awt.Dimension(80, 23));
        totypeCB.setPreferredSize(new java.awt.Dimension(200, 25));
        totypeCB.setRenderer(new genericPaintInterfaceComboBoxRenderer());
        totypeCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CBActionPerformed(evt);
            }
        });

        add(totypeCB, java.awt.BorderLayout.WEST);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("als");
        jPanel1.add(jLabel1);

        add_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/railsim/gui/resources/add.png")));
        add_ToggleButton.setText("neues Gleisobjekt");
        add_ToggleButton.setActionCommand("add");
        add_ToggleButton.setEnabled(false);
        add_ToggleButton.setMargin(new java.awt.Insets(2, 5, 2, 5));
        add_ToggleButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ToggleButtonActionPerformed(evt);
            }
        });

        jPanel1.add(add_ToggleButton);

        del_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/railsim/gui/resources/delete.png")));
        del_Button.setText("Delete");
        del_Button.setActionCommand("del");
        del_Button.setEnabled(false);
        del_Button.setMargin(new java.awt.Insets(2, 5, 2, 5));
        del_Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ButtonActionPerformed(evt);
            }
        });

        jPanel1.add(del_Button);

        rotate_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/railsim/gui/resources/rotate.png")));
        rotate_Button.setText("Rotate");
        rotate_Button.setActionCommand("rotate");
        rotate_Button.setEnabled(false);
        rotate_Button.setMargin(new java.awt.Insets(2, 5, 2, 5));
        rotate_Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ButtonActionPerformed(evt);
            }
        });

        jPanel1.add(rotate_Button);

        add(jPanel1, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private void ToggleButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ToggleButtonActionPerformed
    {//GEN-HEADEREND:event_ToggleButtonActionPerformed
		dataCollector.collector.thegame.runAction(new EditorActionEvent(evt.getActionCommand(), add_ToggleButton.isSelected()));
    }//GEN-LAST:event_ToggleButtonActionPerformed

    private void CBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CBActionPerformed
    {//GEN-HEADEREND:event_CBActionPerformed

		trackObject to = (trackObject) ((JComboBox) evt.getSource()).getSelectedItem();
		if (to != null) {
			add_ToggleButton.setEnabled(true);
			add_ToggleButton.setSelected(true);
			if (!CBeventDisable) {
				dataCollector.collector.thegame.runAction(new EditorActionEvent<>(evt.getActionCommand(), to.getTypeName()));
				dataCollector.collector.thegame.runAction(new EditorActionEvent(add_ToggleButton.getActionCommand(), true));
			}
		} else {
			add_ToggleButton.setEnabled(false);
		}
    }//GEN-LAST:event_CBActionPerformed

    private void ButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButtonActionPerformed
    {//GEN-HEADEREND:event_ButtonActionPerformed
		dataCollector.collector.thegame.runAction(new EditorActionEvent(evt.getActionCommand()));
    }//GEN-LAST:event_ButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton add_ToggleButton;
    private javax.swing.JButton del_Button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton rotate_Button;
    private javax.swing.JComboBox totypeCB;
    // End of variables declaration//GEN-END:variables

	void editorEvent(EditorEvent e) {
		switch (e.getType()) {
			case EditorEvent.TRACKOBJECT_SELECTED:
				workingTO = e.getTrackObject();
				if (!(workingTO instanceof pathableObject) || !((pathableObject) workingTO).isEnabled()) {
					del_Button.setEnabled(true);
					rotate_Button.setEnabled(true);
				} else {
					del_Button.setEnabled(false);
					rotate_Button.setEnabled(false);
				}
				break;
			case EditorEvent.TRACKOBJECT_UNSELECTED:
				workingTO = e.getTrackObject();
				del_Button.setEnabled(false);
				rotate_Button.setEnabled(false);
				break;
			case EditorEvent.TRACKOBJECT_MOVEMODE:
				add_ToggleButton.setSelected(false);
				break;
			case EditorEvent.TRACKOBJECT_GUITYPECHANGED:
				CBeventDisable = true;
				totypeCB.setSelectedIndex(dataCollector.collector.tol.getIndex(e.getString()));
				CBeventDisable = false;
				break;
		}
	}
}
