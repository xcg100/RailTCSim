/*
 * $Revision: 20 $
 * Copyright 2008 js-home.org
 * $Name: not supported by cvs2svn $
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.railsim.gui.panels;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import org.railsim.*;
import org.railsim.editor.*;
import org.railsim.event.AbstractEvent;
import org.railsim.event.AbstractListener;
import org.railsim.gui.*;
import org.railsim.gui.panels.readypanels.routesEditorPanel;
import org.railsim.service.trackObjects.pathableObject;

/**
 *
 * @author js
 */
public class hidepanel_editsignal extends javax.swing.JPanel {

	boolean isvisible = false;
	pathableObject currentSignal = null;

	/**
	 * Creates new form sidepanel_editsignal
	 */
	public hidepanel_editsignal() {
		initComponents();
		add(new routesEditorPanel(), java.awt.BorderLayout.EAST);

		addPropertyChangeListener(MainBar.PANELVISIBILITY, new PropertyChangeListener() {
			@Override
			public void propertyChange(PropertyChangeEvent evt) {
				visibilityChange((Boolean) evt.getNewValue());
			}
		});
		dataCollector.collector.editorEventListeners.addListener(new AbstractListener() {
			@Override
			public void action(AbstractEvent e) {
				trackEvent((EditorEvent) e);
			}
		});
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jPanel1 = new javax.swing.JPanel();
        signal_TextField = new javax.swing.JTextField();
        pathdisable_ToggleButton = new javax.swing.JToggleButton();
        cancel_Button = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        signal_TextField.setEditable(false);
        signal_TextField.setPreferredSize(new java.awt.Dimension(110, 20));
        jPanel1.add(signal_TextField);

        pathdisable_ToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/railsim/gui/resources/disable path.png")));
        pathdisable_ToggleButton.setText("Signal Fahrstra\u00dfen abschalten");
        pathdisable_ToggleButton.setEnabled(false);
        pathdisable_ToggleButton.setMargin(new java.awt.Insets(2, 5, 2, 5));
        pathdisable_ToggleButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pathdisable_ToggleButtonActionPerformed(evt);
            }
        });

        jPanel1.add(pathdisable_ToggleButton);

        cancel_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/railsim/gui/resources/breakpath.png")));
        cancel_Button.setText("anliegende Fahrstra\u00dfe aufheben");
        cancel_Button.setActionCommand("cancel_path");
        cancel_Button.setEnabled(false);
        cancel_Button.setMargin(new java.awt.Insets(2, 5, 2, 5));
        cancel_Button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ButtonActionPerformed(evt);
            }
        });

        jPanel1.add(cancel_Button);

        add(jPanel1, java.awt.BorderLayout.WEST);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private void ButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ButtonActionPerformed
    {//GEN-HEADEREND:event_ButtonActionPerformed
		dataCollector.collector.thegame.runAction(new EditorActionEvent(evt));
    }//GEN-LAST:event_ButtonActionPerformed

    private void pathdisable_ToggleButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_pathdisable_ToggleButtonActionPerformed
    {//GEN-HEADEREND:event_pathdisable_ToggleButtonActionPerformed
		if (currentSignal != null) {
			dataCollector.collector.thegame.runAction(new EditorActionEvent<>("enablesignal", !pathdisable_ToggleButton.isSelected()));
		}
    }//GEN-LAST:event_pathdisable_ToggleButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel_Button;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton pathdisable_ToggleButton;
    private javax.swing.JTextField signal_TextField;
    // End of variables declaration//GEN-END:variables

	void visibilityChange(boolean newval) {
		isvisible = newval;
	}

	void trackEvent(EditorEvent e) {
		switch (e.getType()) {
			case EditorEvent.PATHEDIT_PATHABLE_SELECTED:
				currentSignal = (pathableObject) e.getTrackObject();
				signal_TextField.setText(currentSignal.getName());
				pathdisable_ToggleButton.setEnabled(true);
				pathdisable_ToggleButton.setSelected(!currentSignal.isEnabled());
				cancel_Button.setEnabled(true);
				break;
			case EditorEvent.PATHEDIT_PATHABLE_UNSELECTED:
				currentSignal = null;
				signal_TextField.setText("");
				pathdisable_ToggleButton.setEnabled(false);
				cancel_Button.setEnabled(false);
				break;
			case EditorEvent.PATHEDIT_PATHABLE_RENAMED:
				break;
			case EditorEvent.PATHEDIT_PATHABLE_STATECHANGED:
				if (currentSignal == e.getTrackObject()) {
					pathdisable_ToggleButton.setSelected(!currentSignal.isEnabled());
				}
				break;

		}
	}
}
