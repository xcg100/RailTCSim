/*
 * $Revision: 20 $
 * Copyright 2008 js-home.org
 * $Name: not supported by cvs2svn $
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.railsim.gui;

import javax.swing.JPanel;

import org.railsim.dataCollector;
import org.railsim.event.AbstractEvent;
import org.railsim.event.AbstractListener;
import org.railsim.service.statics;

/**
 *
 * @author js
 */
public class miniMap extends javax.swing.JDialog {

	static private miniMap tEd = null;
	private mapPanel mp = null;

	public static void openMap(JPanel parent) {
		if (tEd == null) {
			tEd = new miniMap(javax.swing.SwingUtilities.getWindowAncestor(parent));
		}
		tEd.setVisible(true);
	}

	public static void update() {
		if (tEd != null) {
			tEd.updateMap();
		}
	}

	/**
	 * Creates new form miniMap
	 */
	public miniMap(java.awt.Window parent) {
		super(parent);
		mp = new mapPanel();
		initComponents();
		dataPane.setViewportView(mp);
		setSize(200, 200);
		dataCollector.collector.gamesetEventListeners.addListener(new AbstractListener() {
			@Override
			public void action(AbstractEvent e) {
				setVisible(false);
				formWindowClosing(null);
			}
		});
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jPanel2 = new javax.swing.JPanel();
        dataPane = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setAlwaysOnTop(true);
        setFocusableWindowState(false);
        setIconImage(statics.loadGUIImage("map_magnify.png"));
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                formComponentShown(evt);
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dataPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        dataPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jLabel1.setText("Minikarte");
        jPanel1.add(jLabel1);

        dataPane.setViewportView(jPanel1);

        jPanel2.add(dataPane, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
    {//GEN-HEADEREND:event_formComponentShown
// TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
		tEd = null;
    }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane dataPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

	private void updateMap() {
		if (dataCollector.collector.isTrackChanged()) {
			javax.swing.SwingUtilities.invokeLater(new Runnable() {
				@Override
				public void run() {
					mp.setDimensions(dataCollector.collector.thepainter.getMinX(), dataCollector.collector.thepainter.getMinY(), dataCollector.collector.thepainter.getMaxX(), dataCollector.collector.thepainter.getMaxY());
					mp.repaint();
				}
			});
		}
	}
}
